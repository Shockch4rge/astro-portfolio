---
import type { MarkdownHeading } from "astro";
import type Heading from "@utils/types/Heading";
import TocHeading from "./TocHeading.astro";

type Props = { headings: MarkdownHeading[] };

function buildToc(headings: MarkdownHeading[]) {
    const toc: Heading[] = [];
    const rootHeadings = new Map<number, Heading>();

    for (const h of headings) {
        const heading: Heading = { ...h, subheadings: [] };

        rootHeadings.set(heading.depth, heading);

        if (heading.depth === 2) {
            toc.push(heading);
        }
        else {
            rootHeadings.get(heading.depth - 1)!.subheadings.push(heading);
        }
    }

    return toc;
}

const { headings } = Astro.props;

const toc = buildToc(headings);
---

<nav class="mt-14 max-w-xs py-4 px-6 bg-slate-900 border-2 border-solid border-cyan-500 hidden xl:block self-start rounded-md sticky top-8">
    <h2 class="text-2xl text-blue-400 tracking-widest">OVERVIEW</h2>
    <ul class="mt-4 space-y-2">
        {toc.map(h => <TocHeading heading={h}/>)}
    </ul>
</nav>
